[
    {
        "title": "WT* is JWT",
        "for": "ApiDays Australia",
        "place": "online",
        "description": "<p>JWT, JWKS, JOSE header etc. etc. etc. Do you feel lost in all of that shortcuts? This session explains in simple way what is JSON Web Token and how you can utilize them in your daily job.</p>",
        "pictureMain": "jwt.jpeg",
        "picture": ["jwt.jpeg"],
        "video": "",
        "slides": "https://speakerdeck.com/maciejtreder/wt-star-is-jwt",
        "keywords": ["jwt", "network", "microservices", "jws", "jwe"],
        "date": 1600214400
    },
    {
        "title": "WT* is JWT",
        "for": "API Con",
        "place": "The Hague, Netherlands / online",
        "description": "<p>JWT, JWKS, JOSE header etc. etc. etc. Do you feel lost in all of that shortcuts? This session explains in simple way what is JSON Web Token and how you can utilize them in your daily job.</p>",
        "pictureMain": "jwt.jpeg",
        "picture": ["jwt.jpeg"],
        "video": "",
        "slides": "https://speakerdeck.com/maciejtreder/wt-star-is-jwt",
        "keywords": ["jwt", "network", "microservices", "jws", "jwe"],
        "date": 1597795200
    },
    {
        "title": "Asynchronous and Synchronous JavaScript. There and back again",
        "for": "FrontCon",
        "place": "Riga, Latvia / online",
        "description": "<p>Callbacks… Callbacks everywhere… Callback inside the callback, and one more inside! Asynchronous JavaScript code is a pain. Event loop is a JavaScript “bigfoot” – everyone heard about it, almost nobody knows how it works… There is multiple ways you can deal with the asynchronous action: callbacks, Promises, Observables, async-await; but which one is best? Which one should you choose for the particular scenarios?</p>",
        "pictureMain": "async_js.jpeg",
        "picture": ["async_js.jpeg"],
        "video": "",
        "slides": "https://speakerdeck.com/maciejtreder/asynchronous-javascript-there-and-back-again",
        "keywords": ["javascript", "rxjs", "promises"],
        "date": 1597795200
    },
    {
        "title": "WT* is JWT",
        "for": "ApiDays NYC",
        "place": "online",
        "description": "<p>JWT, JWKS, JOSE header etc. etc. etc. Do you feel lost in all of that shortcuts? This session explains in simple way what is JSON Web Token and how you can utilize them in your daily job.</p>",
        "pictureMain": "jwt.jpeg",
        "picture": ["jwt.jpeg"],
        "video": "https://www.youtube.com/watch?v=grbWR4_2hIs",
        "slides": "https://speakerdeck.com/maciejtreder/wt-star-is-jwt",
        "keywords": ["jwt", "network", "microservices", "jws", "jwe"],
        "date": 1598659200
    },
    {
        "title": "Asynchronous and Synchronous JavaScript. There and back again",
        "for": "Web Directions Code",
        "place": "Melbourne, Australia / online",
        "description": "<p>Callbacks… Callbacks everywhere… Callback inside the callback, and one more inside! Asynchronous JavaScript code is a pain. Event loop is a JavaScript “bigfoot” – everyone heard about it, almost nobody knows how it works… There is multiple ways you can deal with the asynchronous action: callbacks, Promises, Observables, async-await; but which one is best? Which one should you choose for the particular scenarios?</p>",
        "pictureMain": "async_js.jpeg",
        "picture": ["async_js.jpeg"],
        "video": "",
        "slides": "https://speakerdeck.com/maciejtreder/asynchronous-javascript-there-and-back-again",
        "keywords": ["javascript", "rxjs", "promises"],
        "date": 1599782400
    },
    {
        "title": "Asynchronous and Synchronous JavaScript. There and back again",
        "for": "DevTalks",
        "place": "Cluj, Romania / online",
        "description": "<p>Callbacks… Callbacks everywhere… Callback inside the callback, and one more inside! Asynchronous JavaScript code is a pain. Event loop is a JavaScript “bigfoot” – everyone heard about it, almost nobody knows how it works… There is multiple ways you can deal with the asynchronous action: callbacks, Promises, Observables, async-await; but which one is best? Which one should you choose for the particular scenarios?</p>",
        "pictureMain": "async_js.jpeg",
        "picture": ["async_js.jpeg"],
        "video": "",
        "slides": "https://speakerdeck.com/maciejtreder/asynchronous-javascript-there-and-back-again",
        "keywords": ["javascript", "rxjs", "promises"],
        "date": 1601942400
    },
    {
        "title": "Boost your app with Angular Universal - make it SEO & CDN-friendly",
        "for": "Angular Athens",
        "place": "Athens, Greece",
        "description": "<p>Most of the Single Page Applications, and Angular is not an exception here, manifest one common problem. They are not SEO/CDN/prefetching friendly.</p><p>Some could ask “Why should I care about that? My application bootstraps in the browser and looks awesome”, and they are right, as long as they are well-known companies who don’t need to position themselves on the market, AND their applications are closed ecosystems. In any other case, SEO and prefetching is a “to be or not to be” of the application.</p><p>Is there a way to move Angular rendering process to the server and deliver richer content to the browser instead of pure index.html with tones of JavaScript? Yes, there is! It is called Angular Universal, and thanks to it, we achieve much faster First Meaningful Paint of our website! However, there are some pitfalls and risks as well...</p>",
        "pictureMain": "athens.jpg",
        "picture": ["athens.jpg"],
        "video": "https://www.youtube.com/watch?v=P70FbyQSAm4",
        "slides": "https://speakerdeck.com/maciejtreder/angular-universal-essentials",
        "keywords": ["javascript", "angular", "angular universal", "seo", "cdn", "performance"],
        "date": 1601942400
    },
    {
        "title": "Boost your app with Angular Universal - make it SEO & CDN-friendly",
        "for": "DevFest Poland",
        "place": "Warsaw, Poland",
        "description": "<p>Most of the Single Page Applications, and Angular is not an exception here, manifest one common problem. They are not SEO/CDN/prefetching friendly.</p><p>Some could ask “Why should I care about that? My application bootstraps in the browser and looks awesome”, and they are right, as long as they are well-known companies who don’t need to position themselves on the market, AND their applications are closed ecosystems. In any other case, SEO and prefetching is a “to be or not to be” of the application.</p><p>Is there a way to move Angular rendering process to the server and deliver richer content to the browser instead of pure index.html with tones of JavaScript? Yes, there is! It is called Angular Universal, and thanks to it, we achieve much faster First Meaningful Paint of our website! However, there are some pitfalls and risks as well...</p>",
        "pictureMain": "universal.jpeg",
        "picture": ["universal.jpeg"],
        "slides": "https://speakerdeck.com/maciejtreder/angular-universal-essentials",
        "keywords": ["javascript", "angular", "angular universal", "seo", "cdn", "performance"],
        "date": 1575728190
    },
    {
        "title": "JavaScript APIs you didn’t imagine they even exist",
        "for": "DevFest Poland",
        "place": "Warsaw, Poland",
        "description": "<p>Did you know that you are able to access device gyroscope, ambient light sensor and others by JavaScript? Learn about that and much more incredible APIs which are available in modern browsers.</p>",
        "pictureMain": "js_apis.jpeg",
        "picture": ["js_apis.jpeg"],
        "keywords": ["javascript"],
        "date": 1575728190
    },
    {
        "title": "Angular Schematics - develop for developers",
        "for": "DevFest Siberia",
        "place": "Nobosibirsk, Russia",
        "description": "<p>Schematics is an underestimated part of Angular project. By using them, library developers gain super-powers to helping their customers. You can adjust your customer projects with changes necessary to use the library you provide. Apart from that, Schematics is a great tool for enterprise, which needs to maintain UI elements on behalf of multiple dev-teams.</p><p>In this talk, I am going to start from a high-overview of schematics framework, used by Angular CLI. Audience would get familiar with the Tree and Rule objects concept. I want to show a working example of create, read, update and delete operations, performed by schematics, how can you make  use of TypeScript compiler and how to send a task like package installation to NodeJS.</p><p>What will be covered here, are ‚ng add’, ‚ng update’, ’ng new’, ‚ng generate’ etc. etc. commands, together with best practices, how to perform a unit tests, and end-to-end tests with the use of tools like mock npm registry.</p>",
        "pictureMain": "siberia2019.jpg",
        "picture": ["siberia2019.jpg"],
        "keywords": ["javascript", "angular", "schematics", "cli"],
        "slides": "https://speakerdeck.com/maciejtreder/angular-schematics",
        "video": "https://www.youtube.com/watch?v=sS5FQZ6QYnY",
        "date": 1575158400
    },
    {
        "title": "Angular Schematics - develop for developers",
        "for": "DevFest Craiova",
        "place": "Craiova, Romania",
        "description": "<p>Schematics is an underestimated part of Angular project. By using them, library developers gain super-powers to helping their customers. You can adjust your customer projects with changes necessary to use the library you provide. Apart from that, Schematics is a great tool for enterprise, which needs to maintain UI elements on behalf of multiple dev-teams.</p><p>In this talk, I am going to start from a high-overview of schematics framework, used by Angular CLI. Audience would get familiar with the Tree and Rule objects concept. I want to show a working example of create, read, update and delete operations, performed by schematics, how can you make  use of TypeScript compiler and how to send a task like package installation to NodeJS.</p><p>What will be covered here, are ‚ng add’, ‚ng update’, ’ng new’, ‚ng generate’ etc. etc. commands, together with best practices, how to perform a unit tests, and end-to-end tests with the use of tools like mock npm registry.</p>",
        "pictureMain": "craiova2019.jpg",
        "picture": ["craiova2019.jpg"],
        "keywords": ["javascript", "angular", "schematics", "cli"],
        "slides": "https://speakerdeck.com/maciejtreder/angular-schematics",
        "video": "https://www.youtube.com/watch?v=D9vCwwRud6s",
        "date": 1573862400
    },
    {
        "title": "Angular Schematics - develop for developers",
        "for": "JS Fest",
        "place": "Kiev, Ukraine",
        "description": "<p>Schematics is an underestimated part of Angular project. By using them, library developers gain super-powers to helping their customers. You can adjust your customer projects with changes necessary to use the library you provide. Apart from that, Schematics is a great tool for enterprise, which needs to maintain UI elements on behalf of multiple dev-teams.</p><p>In this talk, I am going to start from a high-overview of schematics framework, used by Angular CLI. Audience would get familiar with the Tree and Rule objects concept. I want to show a working example of create, read, update and delete operations, performed by schematics, how can you make  use of TypeScript compiler and how to send a task like package installation to NodeJS.</p><p>What will be covered here, are ‚ng add’, ‚ng update’, ’ng new’, ‚ng generate’ etc. etc. commands, together with best practices, how to perform a unit tests, and end-to-end tests with the use of tools like mock npm registry.</p>",
        "pictureMain": "jsfest2019.jpg",
        "picture": ["jsfest2019.jpg"],
        "keywords": ["javascript", "angular", "schematics", "cli"],
        "slides": "https://speakerdeck.com/maciejtreder/angular-schematics",
        "video": "https://www.youtube.com/watch?v=nqD_8llqMOo",
        "date": 1573257600
    },
    {
        "title": "Asynchronous and Synchronous JavaScript. There and back again",
        "for": "CFCamp",
        "place": "Munich, Germany",
        "description": "<p>Callbacks… Callbacks everywhere… Callback inside the callback, and one more inside! Asynchronous JavaScript code is a pain. Event loop is a JavaScript “bigfoot” – everyone heard about it, almost nobody knows how it works… There is multiple ways you can deal with the asynchronous action: callbacks, Promises, Observables, async-await; but which one is best? Which one should you choose for the particular scenarios?</p>",
        "pictureMain": "cfcamp2019.jpg",
        "picture": ["cfcamp2019.jpg"],
        "video": "",
        "slides": "https://speakerdeck.com/maciejtreder/asynchronous-javascript-there-and-back-again",
        "keywords": ["javascript", "rxjs", "promises"],
        "date": 1571356800
    },
    {
        "title": "Angular Universal - be more SEO/CDN/User-friendly with server-side rendering [workshop]",
        "for": "HackConf",
        "place": "Sophia, Bulgaria",
        "description": "<p>Most of the Single Page Applications, and Angular is not an exception here, manifest one common problem. They are not SEO/CDN/prefetching friendly.</p><p>Some could ask “Why should I care about that? My application bootstraps in the browser and looks awesome”, and they are right, as long as they are well-known companies who don’t need to position themselves on the market, AND their applications are closed ecosystems. In any other case, SEO and prefetching is a “to be or not to be” of the application.</p><p>Is there a way to move Angular rendering process to the server and deliver richer content to the browser instead of pure index.html with tones of JavaScript? Yes, there is! It is called Angular Universal, and thanks to it, we achieve much faster First Meaningful Paint of our website! However, there are some pitfalls and risks as well...</p>",
        "pictureMain": "hackconf2019_1.jpg",
        "picture": ["hackconf2019_1.jpg"],
        "slides": "https://speakerdeck.com/maciejtreder/angular-universal-essentials",
        "keywords": ["javascript", "angular", "angular universal", "seo", "cdn", "performance"],
        "date": 1570665600
    },
    {
        "title": "E2E testing of the Single Page Applications [workshop]",
        "for": "HackConf",
        "place": "Sophia, Bulgaria",
        "description": "<p>Get an in-depth overview of the end to end (E2E) testing techniques of Single Page Applications.</p><p>In this workshop you will learn how to set up a test environment, remote environment for the Continuous Integration, report your test results in a nice and readable form and much more. </p>",
        "pictureMain": "hackconf2019_2.jpg",
        "picture": ["hackconf2019_2.jpg"],
        "slides": "https://speakerdeck.com/maciejtreder/e2e-spa-tests-with-protractor",
        "keywords": ["javascript", "angular", "testing", "e2e", "protractor"],
        "date": 1570665600
    },
    {
        "title": "Boost your app with Angular Universal - make it SEO & CDN-friendly",
        "for": "Sphere IT",
        "place": "Krakow, Poland",
        "description": "<p>Most of the Single Page Applications, and Angular is not an exception here, manifest one common problem. They are not SEO/CDN/prefetching friendly.</p><p>Some could ask “Why should I care about that? My application bootstraps in the browser and looks awesome”, and they are right, as long as they are well-known companies who don’t need to position themselves on the market, AND their applications are closed ecosystems. In any other case, SEO and prefetching is a “to be or not to be” of the application.</p><p>Is there a way to move Angular rendering process to the server and deliver richer content to the browser instead of pure index.html with tones of JavaScript? Yes, there is! It is called Angular Universal, and thanks to it, we achieve much faster First Meaningful Paint of our website! However, there are some pitfalls and risks as well...</p>",
        "pictureMain": "universal.jpeg",
        "picture": ["universal.jpeg"],
        "slides": "https://speakerdeck.com/maciejtreder/angular-universal-essentials",
        "video": "https://www.youtube.com/watch?v=BpNMvHYXv0Q",
        "keywords": ["javascript", "angular", "angular universal", "seo", "cdn", "performance"],
        "date": 1570406400
    },
    {
        "title": "E2E testing of the Single Page Applications",
        "for": "ChangeCon",
        "place": "Zagreb, Croatia",
        "description": "<p>Get an in-depth overview of the end to end (E2E) testing techniques of Single Page Applications.</p><p>In this workshop you will learn how to set up a test environment, remote environment for the Continuous Integration, report your test results in a nice and readable form and much more. </p>",
        "pictureMain": "changecon2019.jpg",
        "picture": ["changecon2019.jpg"],
        "slides": "https://speakerdeck.com/maciejtreder/e2e-spa-tests-with-protractor",
        "video": "https://www.youtube.com/watch?v=b7V7LPjqiEQ",
        "keywords": ["javascript", "angular", "testing", "e2e", "protractor"],
        "date": 1569628800
    },
    {
        "title": "Angular Universal - A Medicine for the Angular + SEO/CDN Issues",
        "for": "OdessaJS",
        "place": "Odessa, Ukraine",
        "description": "<p>Are you ready for production? Are you sure? Is your application prefetchable? Is it readable for search engine robots? Will it fit into Content Delivery Network? Do you want to make it even faster? Meet the Server-Side Rendering concept. Learn how to bring first meaningful paint immediately, work with server-side Angular code, optimize API calls and more!</p>",
        "pictureMain": "universal.jpeg",
        "picture": ["universal.jpeg"],
        "slides": "https://speakerdeck.com/maciejtreder/angular-universal-essentials",
        "keywords": ["javascript", "angular", "angular universal", "seo", "cdn", "performance"],
        "date": 1563580800
    },
    {
        "title": "Progressive Web Apps: Future of web development",
        "for": "DEVit",
        "place": "Thessaloniki, Greece",
        "description": "<p>Welcome to the web applications of 21st century! Give your users a native-like app experience: instant load, offline experience and push notifications. During this talk, you will get a high level overview of Progressive Web Application concept, how to get started with it in Angular CLI and WorkBox, potential pitfalls and how to address them.</p>",
        "pictureMain": "devit2019.jpg",
        "picture": ["devit2019.jpg"],
        "slides": "https://speakerdeck.com/maciejtreder/devit-thessaloniki-progressive-web-apps-future-of-web-development",
        "keywords": ["javascript", "angular", "pwa", "mobile"],
        "date": 1560038400
    },
    {
        "title": "Progressive Web Apps: Future of web development",
        "for": "Angular NYC",
        "place": "New York City, USA",
        "description": "<p>Welcome to the web applications of 21st century! Give your users a native-like app experience: instant load, offline experience and push notifications. During this talk, you will get a high level overview of Progressive Web Application concept, how to get started with it in Angular CLI and WorkBox, potential pitfalls and how to address them.</p>",
        "pictureMain": "pwa.jpeg",
        "picture": ["pwa.jpeg"],
        "slides": "https://speakerdeck.com/maciejtreder/devit-thessaloniki-progressive-web-apps-future-of-web-development",
        "keywords": ["javascript", "angular", "pwa", "mobile"],
        "date": 1546646400
    },
    {
        "title": "Progressive Web Apps: Future of web development",
        "for": "DevFest MN",
        "place": "Minneapolis, USA",
        "description": "<p>Welcome to the web applications of 21st century! Give your users a native-like app experience: instant load, offline experience and push notifications. During this talk, you will get a high level overview of Progressive Web Application concept, how to get started with it in Angular CLI and WorkBox, potential pitfalls and how to address them.</p>",
        "pictureMain": "pwa.jpeg",
        "picture": ["pwa.jpeg"],
        "slides": "https://speakerdeck.com/maciejtreder/devit-thessaloniki-progressive-web-apps-future-of-web-development",
        "keywords": ["javascript", "angular", "pwa", "mobile"],
        "date": 1546473600
    },
    {
        "title": "Boost your app with Angular Universal - make it SEO & CDN-friendly",
        "for": "DevFest Poland",
        "place": "Warsaw, Poland",
        "description": "<p>Most of the Single Page Applications, and Angular is not an exception here, manifest one common problem. They are not SEO/CDN/prefetching friendly.</p><p>Some could ask “Why should I care about that? My application bootstraps in the browser and looks awesome”, and they are right, as long as they are well-known companies who don’t need to position themselves on the market, AND their applications are closed ecosystems. In any other case, SEO and prefetching is a “to be or not to be” of the application.</p><p>Is there a way to move Angular rendering process to the server and deliver richer content to the browser instead of pure index.html with tones of JavaScript? Yes, there is! It is called Angular Universal, and thanks to it, we achieve much faster First Meaningful Paint of our website! However, there are some pitfalls and risks as well...</p>",
        "pictureMain": "universal.jpeg",
        "picture": ["universal.jpeg"],
        "slides": "https://speakerdeck.com/maciejtreder/angular-universal-essentials",
        "keywords": ["javascript", "angular", "angular universal", "seo", "cdn", "performance"],
        "date": 1543622400
    },
    {
        "title": "Boost your app with Angular Universal - make it SEO & CDN-friendly",
        "for": "DevFest Siberia",
        "place": "Novosibirsk, Russia",
        "description": "<p>Most of the Single Page Applications, and Angular is not an exception here, manifest one common problem. They are not SEO/CDN/prefetching friendly.</p><p>Some could ask “Why should I care about that? My application bootstraps in the browser and looks awesome”, and they are right, as long as they are well-known companies who don’t need to position themselves on the market, AND their applications are closed ecosystems. In any other case, SEO and prefetching is a “to be or not to be” of the application.</p><p>Is there a way to move Angular rendering process to the server and deliver richer content to the browser instead of pure index.html with tones of JavaScript? Yes, there is! It is called Angular Universal, and thanks to it, we achieve much faster First Meaningful Paint of our website! However, there are some pitfalls and risks as well...</p>",
        "pictureMain": "siberia2018.jpg",
        "picture": ["siberia2018.jpg"],
        "slides": "https://speakerdeck.com/maciejtreder/angular-universal-essentials",
        "keywords": ["javascript", "angular", "angular universal", "seo", "cdn", "performance"],
        "date": 1543017600
    },
    {
        "title": "Observable trapped me in memory leak",
        "for": "NG Poland",
        "place": "Warsaw, Poland",
        "description": "<p>Observables trapped me in memory leak...but thanks to design pattern, not only did I get out of it, but also learned how to manage them.</p>",
        "pictureMain": "ngpoland2018.jpg",
        "picture": ["ngpoland2018.jpg"],
        "video": "https://www.youtube.com/watch?v=ItBcC8mJyj0",
        "keywords": ["rxjs", "angular", "javascript"],
        "date": 1543017600
    },
    {
        "title": "Boost your app with Angular Universal - make it SEO & CDN-friendly",
        "for": "JavaScript FWDays",
        "place": "Kiev, Ukraine",
        "description": "<p>Most of the Single Page Applications, and Angular is not an exception here, manifest one common problem. They are not SEO/CDN/prefetching friendly.</p><p>Some could ask “Why should I care about that? My application bootstraps in the browser and looks awesome”, and they are right, as long as they are well-known companies who don’t need to position themselves on the market, AND their applications are closed ecosystems. In any other case, SEO and prefetching is a “to be or not to be” of the application.</p><p>Is there a way to move Angular rendering process to the server and deliver richer content to the browser instead of pure index.html with tones of JavaScript? Yes, there is! It is called Angular Universal, and thanks to it, we achieve much faster First Meaningful Paint of our website! However, there are some pitfalls and risks as well...</p>",
        "pictureMain": "fwdays2019.jpg",
        "picture": ["fwdays2019.jpg"],
        "slides": "https://speakerdeck.com/maciejtreder/angular-universal-essentials",
        "video": "https://www.youtube.com/watch?v=J42mqpVsg0k",
        "keywords": ["javascript", "angular", "angular universal", "seo", "cdn", "performance"],
        "date": 1552694400
    }
]